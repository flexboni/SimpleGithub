apply plugin: 'com.android.application'

// 코틀린 안드로이드 플러그인 적용
apply plugin: 'kotlin-android'

// 코틀린 안드로이드 익스텐션 프러그인을 적용.
apply plugin: 'kotlin-android-extensions'

// 코틀린 코드에서 어노테이션 프로세싱을 사용할 수 있도록 kotlin-kapt 플러그인 추가 적용
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId "com.android.gubonny.simplegithub"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        // 그래들 프로퍼티에 정의된 값을 BuildConfig 내 필드로 변환해줍니다.
        // 프로퍼티가 정의되어 있지 않다면 "NOT_FUND" 값이 BuildConfig 내 필드에 대입됩니다.
        buildConfigField "String", "GITHUB_CLIENT_ID",
                project.properties["GITHUB_CLIENT_ID"] ?: "\"NOT_FOUND\""

        buildConfigField "String", "GITHUB_CLIENT_SECRET",
                project.properties["GITHUB_CLIENT_SECRET"] ?: "\"NOT_FOUND\""
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    // 코틀린 코드를 저장할 폴더를 소스 디렉터리로 등록
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "com.android.support:appcompat-v7:$supportLibVersion"
    implementation "com.android.support:customtabs:$supportLibVersion"
    implementation "com.android.support:design:$supportLibVersion"
    implementation "com.android.support:recyclerview-v7:$supportLibVersion"
    implementation "com.github.bumptech.glide:glide:$glideVersion"
    implementation "com.google.code.gson:gson:$gsonVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$okHttpVersion"
    implementation "com.squareup.okhttp3:okhttp:$okHttpVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion:"
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    annotationProcessor "com.github.bumptech.glide:compiler:$glideVersion"

    // 코틀린 표준 라이브러리 의존성에 추가
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"

    // 코틀린 어노테이션 프로세서에서 처리될 수 있도록 의존성 추가
    implementation "com.github.bumptech.glide:compiler:$glideVersion"

    // Glide 4.0 의 Generated API 를 위해 필요함.
    kapt "com.github.bumptech.glide:compiler:$glideVersion"

    // Anko Commons 라이브러리 추가
    implementation "org.jetbrains.anko:anko-commons:$ankoVersion"

    // Retrofit 에서 받은 응답을 옵서버블로 변환해주는 라이브러리 추가
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofitVersion"

    // RxAndroid 와 RxJava 라이브러리 추가
    implementation "io.reactivex.rxjava2:rxandroid:$rxAndroidVersion"
    implementation "io.reactivex.rxjava2:rxjava:$rxJavaVersion"

    // 서포트 라이브러리의 SearchView 를 위한 바인딩을 제공하는
    // RxBinding 라이브러리 추가.
    implementation "com.jakewharton.rxbinding2:rxbinding-appcompat-v7:$rxBindingVersion"
}
